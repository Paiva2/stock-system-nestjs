// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  default
  admin
}

model User {
  id             String   @id @default(uuid())
  email          String   @unique @db.VarChar(200)
  fullName       String   @db.VarChar(100)
  password       String   @db.VarChar(200)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  secretQuestion String   @db.VarChar(200)
  secretAnswer   String   @db.VarChar(100)
  role           Role     @default(default)
  stocks         Stock[]

  @@map("users")
}

model Stock {
  id         String      @id @default(uuid())
  stockName  String      @db.VarChar(100)
  stockOwner String      @db.VarChar(100)
  active     Boolean     @default(true)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  items      StockItem[]

  user User? @relation(fields: [stockOwner], references: [id], onDelete: Cascade)

  @@map("stock")
}

model StockItem {
  id          String   @id @default(uuid())
  itemName    String   @db.VarChar(100)
  quantity    Int      @db.Integer()
  stockId     String   @db.VarChar(100)
  description String?  @db.VarChar(300)
  categoryId  String   @db.VarChar(100)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  stock    Stock    @relation(fields: [stockId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("stockItem")
}

model Category {
  id        String      @id @default(uuid())
  name      String      @db.VarChar(100)
  createdAt DateTime    @default(now())
  StockItem StockItem[]
}
